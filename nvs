#!/bin/bash

reportsDirectory=$HOME/Sync/Projects/nvs/NVS

#Make sure to configure sendmail before using the send command

#Load temporary saved Variables
if [ -f "/tmp/nvs.local" ]; then
  source /tmp/nvs.local
fi;


#Change to the Base Directory of all Reports
cd $reportsDirectory || exit

reports=(*/)

#Set the Report Variable to the latest reprt, if it doesn't exist yet.
if [ -z "$report" ]; then
  report=$(basename ${reports[-1]})
fi;

#Chhose another Report to set the Report Variable to.
function setCurrentReport() {
  echo "currently used:"
  echo "$(tput bold)$report $(tput sgr0)"

  for i in "${!reports[@]}"; do
    if [ "$report" = "$(basename ${reports[$i]})" ]; then
      echo "$(tput bold)$i) $(basename ${reports[$i]}) $(tput sgr0)"
    else
      echo "$i) $(basename ${reports[$i]})"
    fi
  done
  echo;
  echo "Please select the report you want to use"
  read reportIndex

  report=$(basename ${reports[$reportIndex]})

  echo;
  echo "You are now using:";
  echo "$(tput bold) $report $(tput sgr0)";

  echo  "report=$report" > /tmp/nvs.local
}


#Generate a new NVS Report
function init() {
  reportDirectory="5CHIF_$(date "+%Y%m%d")_Schreib"
  mkdir $reportDirectory
  cd $reportDirectory || exit
echo "---
title:
layout: report
date: $(date -I)
task:
description: ErfÃ¼llung der Aufgabenstellung
subject: nvs
---" > index.md

  echo  "$reportsDirectory succsessfully initialized"
}

#Generate a Pdf for the latest Report
function generatePdf() {
  wkhtmltopdf --header-line --footer-line --footer-right "Seite [page] von [toPage]" --print-media-type http://localhost:4000/NVS/$report $report/$report.pdf
}

#Send the latest Report to the instructor
function send() {
  #Source your custom Variables for the SMTP Server from another Script
  if [ -f "nvs.local" ]; then
    source nvs.local
  fi;

  echo "" | mail -s "$report" -a $report/$report.pdf $1
  return
}

function screenshot {
  scrot -s "$report/%Y%m%d_\$wx\$h.png" -e 'echo "![]($n)" | xclip -selection c'
}

function displayInfo() {
  echo "Currently using:"
  echo "$(tput bold) $report $(tput sgr0)"
}

case $1 in
  'init')
    init;;
  'gen')
    generatePdf;;
  'send' )
    send $2;;
  'set')
    setCurrentReport;;
  'scrot')
    screenshot;;
  *)
    displayInfo;;

esac
